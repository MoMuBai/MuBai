apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.mob.mubai"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    //直接写在gradle不安全 这里在混淆文件中写入
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        debug {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        preview {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            manifestPlaceholders = [app_label: "@string/app_name_debug"]

            applicationIdSuffix ".debug" // 增加APP ID的后缀

            minifyEnabled false //混淆处理

            shrinkResources false  //去除无用资源

            debuggable true  // 保留debug信息

            signingConfig signingConfigs.debug //签名

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 混淆配置
        }

        release {
            manifestPlaceholders = [app_label: "@string/app_name_release"]

            minifyEnabled true

            shrinkResources false

            debuggable false

            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


        preview {
            manifestPlaceholders = [app_label: "@string/app_name_preview"]

            applicationIdSuffix ".preview"

            debuggable true

            minifyEnabled true

            shrinkResources true

            signingConfig signingConfigs.preview

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        lzg {}
        zjy {}
        lzw {}

        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
        maven { url "https://jitpack.io" }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    testCompile "junit:junit:$rootProject.junitVersion"
    compile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testCompile "org.robolectric:robolectric:$rootProject.robolectricVersion"
    compile "com.android.support:multidex:$rootProject.multidexVersion"
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.squareup.okhttp:okhttp:$rootProject.okhttpVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    compile "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit2Version"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofit2Version"
    compile project(':IMKit')
    compile(name: 'refreshAndLoad', ext: 'aar')
    compile "com.yanzhenjie:recyclerview-swipe:$rootProject.yanzhenjieRecyclerviewSwipeVersion"
    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"
    compile "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    compile "com.facebook.fresco:fresco:$rootProject.frescoVersion"
    compile "com.alibaba:fastjson:$rootProject.fastjsonVersion"
    compile 'com.novoda.imageloader:imageloader-core:1.6.1'
    compile files('libs/jackson-core-2.2.3.jar')
    compile files('libs/jackson-databind-2.2.3.jar')
    compile files('libs/jackson-annotations-2.2.3.jar')
}

